{
  "name": "next-dave-io",
  "dependencies": {
    "@asteasolutions/zod-to-openapi": "7.3.3",
    "@iconify-json/heroicons": "1.2.2",
    "@iconify-json/mdi-light": "1.2.2",
    "@noble/hashes": "1.8.0",
    "@nuxt/fonts": "0.11.4",
    "@nuxt/icon": "1.13.0",
    "@nuxt/image": "1.10.0",
    "@nuxt/scripts": "0.11.8",
    "@nuxt/test-utils": "3.19.1",
    "@nuxt/ui": "3.1.3",
    "@nuxtjs/color-mode": "3.5.2",
    "@pinia/nuxt": "0.11.1",
    "@tanstack/vue-table": "8.21.3",
    "@types/js-yaml": "4.0.9",
    "@unhead/vue": "2.0.10",
    "boxen": "^8.0.1",
    "chalk": "^5.4.1",
    "cloudflare": "4.3.0",
    "date-fns": "4.1.0",
    "fast-xml-parser": "5.2.5",
    "file-type": "21.0.0",
    "jose": "6.0.11",
    "js-yaml": "4.1.0",
    "jsonc-parser": "3.3.1",
    "lodash-es": "4.17.21",
    "nuxt": "3.17.5",
    "ora": "^8.2.0",
    "pinia": "3.0.3",
    "swagger-ui-express": "5.0.1",
    "typescript": "5.8.3",
    "uuid": "11.1.0",
    "vue": "3.5.16",
    "vue-router": "4.5.1",
    "zod": "3.25.63"
  },
  "devDependencies": {
    "@anthropic-ai/claude-code": "1.0.21",
    "@biomejs/biome": "1.9.4",
    "@nuxtjs/tailwindcss": "7.0.0-beta.0",
    "@openai/codex": "0.1.2505172129",
    "@trunkio/launcher": "1.3.4",
    "@types/bun": "1.2.16",
    "@types/lodash-es": "4.17.12",
    "@types/readline-sync": "1.4.8",
    "@vitest/coverage-v8": "3.2.3",
    "@vitest/ui": "3.2.3",
    "commander": "^14.0.0",
    "happy-dom": "18.0.1",
    "json5": "2.2.3",
    "ms": "2.1.3",
    "nitro-cloudflare-dev": "0.2.2",
    "nitropack": "2.11.12",
    "npm-run-all2": "^8.0.4",
    "readline-sync": "1.4.10",
    "rimraf": "6.0.1",
    "tailwindcss": "4.1.10",
    "vitest": "3.2.3",
    "wrangler": "4.20.0"
  },
  "private": true,
  "scripts": {
    "// === FULL CHECK ===": "",
    "check": "bun run-s init build lint test:unit",
    "// === PREPARATION ===": "",
    "init": "bun run-s reset generate",
    "// === BUILD TASKS ===": "",
    "build": "bun run-s init build:nuxt",
    "build:nuxt": "bun run nuxt build",
    "// === DEVELOPMENT ===": "",
    "dev": "bun run-s init dev:nuxt",
    "dev:nuxt": "bun run nuxt dev",
    "// === DEPLOYMENT ===": "",
    "deploy": "bun run-s init build deploy:env deploy:wrangler",
    "deploy:env": "bun run bin/env.ts",
    "deploy:wrangler": "bun run wrangler deploy",
    "// === GENERATION ===": "",
    "generate": "bun run-s generate:prepare generate:types generate:openapi",
    "generate:openapi": "bun run bin/openapi.ts && biome format --write public/openapi.json",
    "generate:types": "bun run wrangler types",
    "generate:prepare": "bun run nuxt prepare",
    "// === LINTING ===": "",
    "lint": "bun run-s lint:biome lint:trunk lint:types",
    "lint:biome": "bun run biome check --write",
    "lint:trunk": "bun run trunk check -a --fix",
    "lint:types": "tsc --noEmit",
    "lint:format": "bun run-s lint:format:biome lint:format:trunk",
    "lint:format:biome": "bun run biome format --write",
    "lint:format:trunk": "trunk fmt -a",
    "// === TESTING ===": "",
    "test": "bun run test:unit",
    "test:all": "bun run-s test:unit test:ui test:apitest:coverage",
    "test:api": "bun run bin/api.ts",
    "test:coverage": "vitest --coverage",
    "test:ui": "vitest --ui",
    "test:unit": "vitest run",
    "test:watch": "vitest",
    "// === MAINTENANCE ===": "",
    "reset": "bun run-s reset:clean reset:packages",
    "reset:clean": "bun run rimraf .nuxt .output .wrangler *.d.ts",
    "reset:packages": "bun run-s reset:packages:delete reset:packages:install",
    "reset:packages:delete": "bun run rimraf node_modules bun.lock",
    "reset:packages:install": "bun install",
    "reset:kv": "bun run kv import data/kv/_init.yaml --wipe --yes",
    "// === UTILITIES ===": "",
    "jwt": "bun run bin/jwt.ts",
    "kv": "bun run bin/kv.ts",
    "try": "bun run bin/try.ts",
    "// === HOOKS ===": "",
    "postinstall": "bun run generate"
  },
  "resolutions": {
    "brace-expansion": "4.0.1"
  },
  "trustedDependencies": [
    "@anthropic-ai/claude-code",
    "@biomejs/biome",
    "@parcel/watcher",
    "@scarf/scarf",
    "@tailwindcss/oxide",
    "esbuild",
    "sharp",
    "vue-demi",
    "workerd"
  ],
  "type": "module"
}
