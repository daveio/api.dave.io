---
description: Global Workspace Rules
globs:
alwaysApply: true
---

# Global Workspace Rules

## üö® CRITICAL DEVELOPMENT RULES - MANDATORY FOR EVERY REQUEST

**‚ö†Ô∏è THESE RULES MUST BE FOLLOWED AT ALL TIMES, IN EVERY REQUEST ‚ö†Ô∏è**

**1. Breaking Changes**: NO backwards compatibility. Document in AGENTS.md. ‚ùå No migration code.

**2. Quality > Speed**: Unlimited time/calls for correct implementations. Refactor ruthlessly. ‚ùå No "good enough".

**3. Mandatory Testing**: EVERYTHING with logic/side effects needs tests. Commands: `bun run test`, `bun run test:ui`, `bun run test:api`. ‚ùå Skip trivial getters, frontend components, config.

**4. Documentation Sync**: AGENTS.md = source of truth. Update after API/feature/auth changes.

**5. Quality Verification**: `bun run build` ‚Üí `bun run lint:biome`, `bun run lint:trunk`, `bun run lint:types`, `bun run test` ‚Üí `bun run check`. ‚ùå Never commit broken code.

**6. Commit Hygiene**: `git add -A . && oco --fgm --yes` or `git add -A . && git commit -am "[emoji] [description]"`. Commit after features/bugs/refactoring.

**7. Zero Mock Data**: Only real service calls (`env.AI.run()`, `env.DATA.get/put()`). Crash loudly on failure. ‚ùå No `Math.random()`, hardcoded values, fake delays. Exception: test files.

**8. No Incomplete Code**: Mark with `// TODO: [description]`. Prefer explicit errors over silent failures.

**9. TODO Management**: Use 6-hex IDs per logical issue. Update TODO.md. Examples:

```typescript
// TODO: (37c7b2) Skip Bun mocking - test separately
```

```markdown
- **TODO:** _37c7b2_ `test/file.ts:18` Description
```

**10. KV Data**: Simple values only. Hierarchical keys: `metrics:api:ok`. Kebab-case: `auth:token-uuid`. Update `data/kv/_init.yaml`.

**11. Shared Code**: Extract duplicated logic to `server/utils/` immediately. Add JSDoc, tests, types. ‚ùå No copy-pasting.
