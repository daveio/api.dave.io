{
  "openapi": "3.0.0",
  "info": {
    "title": "Dave.io API",
    "version": "1.0.0",
    "description": "Automatically generated OpenAPI specification"
  },
  "servers": [
    {
      "url": "https://next.dave.io",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token authorization. Include 'Bearer ' prefix."
      }
    },
    "schemas": {
      "AiAltTextRequestSchema": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri"
          },
          "image": {
            "type": "string"
          }
        }
      },
      "AiAltTextResponseSchema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [true]
          },
          "alt_text": {
            "type": "string"
          },
          "confidence": {
            "type": "number"
          },
          "processing_time_ms": {
            "type": "number"
          },
          "timestamp": {
            "type": "string"
          }
        },
        "required": ["success", "alt_text", "timestamp"]
      },
      "ApiErrorResponseSchema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [false]
          },
          "error": {
            "type": "string"
          },
          "details": {},
          "meta": {
            "type": "object",
            "properties": {
              "request_id": {
                "type": "string"
              }
            }
          },
          "timestamp": {
            "type": "string"
          }
        },
        "required": ["success", "error", "timestamp"]
      },
      "ApiSuccessResponseSchema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [true]
          },
          "data": {},
          "message": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "properties": {
              "total": {
                "type": "number"
              },
              "page": {
                "type": "number"
              },
              "per_page": {
                "type": "number"
              },
              "total_pages": {
                "type": "number"
              },
              "request_id": {
                "type": "string"
              }
            }
          },
          "timestamp": {
            "type": "string"
          }
        },
        "required": ["success", "timestamp"]
      },
      "AuthIntrospectionSchema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "valid": {
                "type": "boolean"
              },
              "payload": {
                "type": "object",
                "properties": {
                  "sub": {
                    "type": "string"
                  },
                  "iat": {
                    "type": "number"
                  },
                  "exp": {
                    "type": "number"
                  },
                  "jti": {
                    "type": "string"
                  }
                },
                "required": ["sub", "iat"]
              },
              "user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "issuedAt": {
                    "type": "string"
                  },
                  "expiresAt": {
                    "type": ["string", "null"]
                  },
                  "tokenId": {
                    "type": "string"
                  }
                },
                "required": ["id", "issuedAt", "expiresAt"]
              },
              "error": {
                "type": "string"
              }
            },
            "required": ["valid"]
          },
          "message": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          }
        },
        "required": ["success", "data", "timestamp"]
      },
      "AuthSuccessResponseSchema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [true]
          },
          "message": {
            "type": "string"
          },
          "jwt": {
            "type": "object",
            "properties": {
              "sub": {
                "type": "string"
              },
              "iat": {
                "type": "number"
              },
              "exp": {
                "type": "number"
              },
              "jti": {
                "type": "string"
              }
            },
            "required": ["sub", "iat"]
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "issuedAt": {
                "type": "string"
              },
              "expiresAt": {
                "type": ["string", "null"]
              },
              "tokenId": {
                "type": "string"
              }
            },
            "required": ["id", "issuedAt", "expiresAt"]
          },
          "timestamp": {
            "type": "string"
          }
        },
        "required": ["success", "message", "jwt", "user", "timestamp"]
      },
      "CreateRedirectSchema": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9\\-_]+$"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": ["slug", "url"]
      },
      "EnhancedPingResponseSchema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "cloudflare": {
                "type": "object",
                "properties": {
                  "connectingIP": {
                    "type": "string"
                  },
                  "country": {
                    "type": "object",
                    "properties": {
                      "ip": {
                        "type": "string"
                      },
                      "primary": {
                        "type": "string"
                      }
                    },
                    "required": ["ip", "primary"]
                  },
                  "datacentre": {
                    "type": "string"
                  },
                  "ray": {
                    "type": "string"
                  },
                  "request": {
                    "type": "object",
                    "properties": {
                      "agent": {
                        "type": "string"
                      },
                      "host": {
                        "type": "string"
                      },
                      "method": {
                        "type": "string"
                      },
                      "path": {
                        "type": "string"
                      },
                      "proto": {
                        "type": "object",
                        "properties": {
                          "forward": {
                            "type": "string"
                          },
                          "request": {
                            "type": "string"
                          }
                        },
                        "required": ["forward", "request"]
                      },
                      "version": {
                        "type": "string"
                      }
                    },
                    "required": ["agent", "host", "method", "path", "proto", "version"]
                  }
                },
                "required": ["connectingIP", "country", "datacentre", "ray", "request"]
              },
              "worker": {
                "type": "object",
                "properties": {
                  "edge_functions": {
                    "type": "boolean"
                  },
                  "environment": {
                    "type": "string"
                  },
                  "limits": {
                    "type": "object",
                    "properties": {
                      "cpu_time": {
                        "type": "string"
                      },
                      "memory": {
                        "type": "string"
                      },
                      "request_timeout": {
                        "type": "string"
                      }
                    },
                    "required": ["cpu_time", "memory", "request_timeout"]
                  },
                  "preset": {
                    "type": "string"
                  },
                  "runtime": {
                    "type": "string"
                  },
                  "server_side_rendering": {
                    "type": "boolean"
                  },
                  "version": {
                    "type": "string"
                  }
                },
                "required": [
                  "edge_functions",
                  "environment",
                  "limits",
                  "preset",
                  "runtime",
                  "server_side_rendering",
                  "version"
                ]
              }
            },
            "required": ["cloudflare", "worker"]
          },
          "auth": {
            "type": "object",
            "properties": {
              "supplied": {
                "type": "boolean"
              },
              "token": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string"
                  },
                  "valid": {
                    "type": "boolean"
                  },
                  "payload": {
                    "type": "object",
                    "properties": {
                      "subject": {
                        "type": "string"
                      },
                      "tokenId": {
                        "type": ["string", "null"]
                      },
                      "issuedAt": {
                        "type": "string"
                      },
                      "expiresAt": {
                        "type": ["string", "null"]
                      }
                    },
                    "required": ["subject", "tokenId", "issuedAt", "expiresAt"]
                  }
                },
                "required": ["value", "valid"]
              }
            },
            "required": ["supplied"]
          },
          "headers": {
            "type": "object",
            "properties": {
              "count": {
                "type": "number"
              },
              "cloudflare": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "forwarding": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "other": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "required": ["count", "cloudflare", "forwarding", "other"]
          },
          "ok": {
            "type": "boolean",
            "enum": [true]
          },
          "timestamp": {
            "type": "string"
          }
        },
        "required": ["data", "auth", "headers", "ok", "timestamp"]
      },
      "HealthCheckSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["ok", "error"]
          },
          "timestamp": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "environment": {
            "type": "string"
          },
          "runtime": {
            "type": "string"
          },
          "cf_ray": {
            "type": "string"
          },
          "cf_datacenter": {
            "type": "string"
          }
        },
        "required": ["status", "timestamp", "version", "environment"]
      },
      "ImageOptimisationRequestSchema": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string"
          },
          "quality": {
            "type": "number",
            "minimum": 0,
            "maximum": 100
          }
        }
      },
      "ImageOptimisationResponseSchema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [true]
          },
          "data": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri"
              },
              "originalSizeBytes": {
                "type": "number"
              },
              "optimisedSizeBytes": {
                "type": "number"
              },
              "compressionRatio": {
                "type": "number"
              },
              "format": {
                "type": "string",
                "enum": ["webp"]
              },
              "hash": {
                "type": "string"
              },
              "quality": {
                "type": "number"
              },
              "preset": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "enum": ["alt"]
                  },
                  "description": {
                    "type": "string"
                  },
                  "maxSizeBytes": {
                    "type": "number"
                  }
                },
                "required": ["name", "description", "maxSizeBytes"]
              },
              "imageSource": {
                "type": "string"
              },
              "timestamp": {
                "type": "string"
              }
            },
            "required": [
              "url",
              "originalSizeBytes",
              "optimisedSizeBytes",
              "compressionRatio",
              "format",
              "hash",
              "imageSource",
              "timestamp"
            ]
          },
          "message": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          }
        },
        "required": ["success", "data", "message", "timestamp"]
      },
      "JWTDetailsSchema": {
        "type": "object",
        "properties": {
          "sub": {
            "type": "string"
          },
          "iat": {
            "type": "number"
          },
          "exp": {
            "type": "number"
          },
          "jti": {
            "type": "string"
          }
        },
        "required": ["sub", "iat"]
      },
      "JWTPayloadSchema": {
        "type": "object",
        "properties": {
          "sub": {
            "type": "string"
          },
          "iat": {
            "type": "number"
          },
          "exp": {
            "type": "number"
          },
          "jti": {
            "type": "string"
          }
        },
        "required": ["sub", "iat"]
      },
      "KVDataSchema": {
        "type": "object",
        "properties": {
          "metrics": {
            "type": "object",
            "properties": {
              "resources": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "number"
                    },
                    "error": {
                      "type": "number"
                    },
                    "times": {
                      "type": "object",
                      "properties": {
                        "last-hit": {
                          "type": "number"
                        },
                        "last-error": {
                          "type": "number"
                        },
                        "last-ok": {
                          "type": "number"
                        }
                      },
                      "required": ["last-hit", "last-error", "last-ok"]
                    },
                    "visitor": {
                      "type": "object",
                      "properties": {
                        "human": {
                          "type": "number"
                        },
                        "bot": {
                          "type": "number"
                        },
                        "unknown": {
                          "type": "number"
                        }
                      },
                      "required": ["human", "bot", "unknown"]
                    },
                    "group": {
                      "type": "object",
                      "properties": {
                        "1xx": {
                          "type": "number"
                        },
                        "2xx": {
                          "type": "number"
                        },
                        "3xx": {
                          "type": "number"
                        },
                        "4xx": {
                          "type": "number"
                        },
                        "5xx": {
                          "type": "number"
                        }
                      },
                      "required": ["1xx", "2xx", "3xx", "4xx", "5xx"]
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "304": {
                          "type": "number"
                        },
                        "307": {
                          "type": "number"
                        },
                        "404": {
                          "type": "number"
                        },
                        "405": {
                          "type": "number"
                        },
                        "500": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": ["ok", "error", "times", "visitor", "group", "status"]
                }
              },
              "redirect": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "number"
                    },
                    "error": {
                      "type": "number"
                    },
                    "times": {
                      "type": "object",
                      "properties": {
                        "last-hit": {
                          "type": "number"
                        },
                        "last-error": {
                          "type": "number"
                        },
                        "last-ok": {
                          "type": "number"
                        }
                      },
                      "required": ["last-hit", "last-error", "last-ok"]
                    },
                    "visitor": {
                      "type": "object",
                      "properties": {
                        "human": {
                          "type": "number"
                        },
                        "bot": {
                          "type": "number"
                        },
                        "unknown": {
                          "type": "number"
                        }
                      },
                      "required": ["human", "bot", "unknown"]
                    },
                    "group": {
                      "type": "object",
                      "properties": {
                        "1xx": {
                          "type": "number"
                        },
                        "2xx": {
                          "type": "number"
                        },
                        "3xx": {
                          "type": "number"
                        },
                        "4xx": {
                          "type": "number"
                        },
                        "5xx": {
                          "type": "number"
                        }
                      },
                      "required": ["1xx", "2xx", "3xx", "4xx", "5xx"]
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "304": {
                          "type": "number"
                        },
                        "307": {
                          "type": "number"
                        },
                        "404": {
                          "type": "number"
                        },
                        "405": {
                          "type": "number"
                        },
                        "500": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": ["ok", "error", "times", "visitor", "group", "status"]
                }
              },
              "ok": {
                "type": "number"
              },
              "error": {
                "type": "number"
              },
              "times": {
                "type": "object",
                "properties": {
                  "last-hit": {
                    "type": "number"
                  },
                  "last-error": {
                    "type": "number"
                  },
                  "last-ok": {
                    "type": "number"
                  }
                },
                "required": ["last-hit", "last-error", "last-ok"]
              },
              "visitor": {
                "type": "object",
                "properties": {
                  "human": {
                    "type": "number"
                  },
                  "bot": {
                    "type": "number"
                  },
                  "unknown": {
                    "type": "number"
                  }
                },
                "required": ["human", "bot", "unknown"]
              },
              "group": {
                "type": "object",
                "properties": {
                  "1xx": {
                    "type": "number"
                  },
                  "2xx": {
                    "type": "number"
                  },
                  "3xx": {
                    "type": "number"
                  },
                  "4xx": {
                    "type": "number"
                  },
                  "5xx": {
                    "type": "number"
                  }
                },
                "required": ["1xx", "2xx", "3xx", "4xx", "5xx"]
              },
              "status": {
                "type": "object",
                "properties": {
                  "304": {
                    "type": "number"
                  },
                  "307": {
                    "type": "number"
                  },
                  "404": {
                    "type": "number"
                  },
                  "405": {
                    "type": "number"
                  },
                  "500": {
                    "type": "number"
                  }
                }
              }
            },
            "required": ["resources", "redirect", "ok", "error", "times", "visitor", "group", "status"]
          },
          "redirect": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "uri"
            }
          }
        },
        "required": ["metrics", "redirect"]
      },
      "KVGroupMetricsSchema": {
        "type": "object",
        "properties": {
          "1xx": {
            "type": "number"
          },
          "2xx": {
            "type": "number"
          },
          "3xx": {
            "type": "number"
          },
          "4xx": {
            "type": "number"
          },
          "5xx": {
            "type": "number"
          }
        },
        "required": ["1xx", "2xx", "3xx", "4xx", "5xx"]
      },
      "KVMetricsSchema": {
        "type": "object",
        "properties": {
          "resources": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "number"
                },
                "error": {
                  "type": "number"
                },
                "times": {
                  "type": "object",
                  "properties": {
                    "last-hit": {
                      "type": "number"
                    },
                    "last-error": {
                      "type": "number"
                    },
                    "last-ok": {
                      "type": "number"
                    }
                  },
                  "required": ["last-hit", "last-error", "last-ok"]
                },
                "visitor": {
                  "type": "object",
                  "properties": {
                    "human": {
                      "type": "number"
                    },
                    "bot": {
                      "type": "number"
                    },
                    "unknown": {
                      "type": "number"
                    }
                  },
                  "required": ["human", "bot", "unknown"]
                },
                "group": {
                  "type": "object",
                  "properties": {
                    "1xx": {
                      "type": "number"
                    },
                    "2xx": {
                      "type": "number"
                    },
                    "3xx": {
                      "type": "number"
                    },
                    "4xx": {
                      "type": "number"
                    },
                    "5xx": {
                      "type": "number"
                    }
                  },
                  "required": ["1xx", "2xx", "3xx", "4xx", "5xx"]
                },
                "status": {
                  "type": "object",
                  "properties": {
                    "304": {
                      "type": "number"
                    },
                    "307": {
                      "type": "number"
                    },
                    "404": {
                      "type": "number"
                    },
                    "405": {
                      "type": "number"
                    },
                    "500": {
                      "type": "number"
                    }
                  }
                }
              },
              "required": ["ok", "error", "times", "visitor", "group", "status"]
            }
          },
          "redirect": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "number"
                },
                "error": {
                  "type": "number"
                },
                "times": {
                  "type": "object",
                  "properties": {
                    "last-hit": {
                      "type": "number"
                    },
                    "last-error": {
                      "type": "number"
                    },
                    "last-ok": {
                      "type": "number"
                    }
                  },
                  "required": ["last-hit", "last-error", "last-ok"]
                },
                "visitor": {
                  "type": "object",
                  "properties": {
                    "human": {
                      "type": "number"
                    },
                    "bot": {
                      "type": "number"
                    },
                    "unknown": {
                      "type": "number"
                    }
                  },
                  "required": ["human", "bot", "unknown"]
                },
                "group": {
                  "type": "object",
                  "properties": {
                    "1xx": {
                      "type": "number"
                    },
                    "2xx": {
                      "type": "number"
                    },
                    "3xx": {
                      "type": "number"
                    },
                    "4xx": {
                      "type": "number"
                    },
                    "5xx": {
                      "type": "number"
                    }
                  },
                  "required": ["1xx", "2xx", "3xx", "4xx", "5xx"]
                },
                "status": {
                  "type": "object",
                  "properties": {
                    "304": {
                      "type": "number"
                    },
                    "307": {
                      "type": "number"
                    },
                    "404": {
                      "type": "number"
                    },
                    "405": {
                      "type": "number"
                    },
                    "500": {
                      "type": "number"
                    }
                  }
                }
              },
              "required": ["ok", "error", "times", "visitor", "group", "status"]
            }
          },
          "ok": {
            "type": "number"
          },
          "error": {
            "type": "number"
          },
          "times": {
            "type": "object",
            "properties": {
              "last-hit": {
                "type": "number"
              },
              "last-error": {
                "type": "number"
              },
              "last-ok": {
                "type": "number"
              }
            },
            "required": ["last-hit", "last-error", "last-ok"]
          },
          "visitor": {
            "type": "object",
            "properties": {
              "human": {
                "type": "number"
              },
              "bot": {
                "type": "number"
              },
              "unknown": {
                "type": "number"
              }
            },
            "required": ["human", "bot", "unknown"]
          },
          "group": {
            "type": "object",
            "properties": {
              "1xx": {
                "type": "number"
              },
              "2xx": {
                "type": "number"
              },
              "3xx": {
                "type": "number"
              },
              "4xx": {
                "type": "number"
              },
              "5xx": {
                "type": "number"
              }
            },
            "required": ["1xx", "2xx", "3xx", "4xx", "5xx"]
          },
          "status": {
            "type": "object",
            "properties": {
              "304": {
                "type": "number"
              },
              "307": {
                "type": "number"
              },
              "404": {
                "type": "number"
              },
              "405": {
                "type": "number"
              },
              "500": {
                "type": "number"
              }
            }
          }
        },
        "required": ["resources", "redirect", "ok", "error", "times", "visitor", "group", "status"]
      },
      "KVRedirectMappingSchema": {
        "type": "object",
        "additionalProperties": {
          "type": "string",
          "format": "uri"
        }
      },
      "KVRedirectMetricsSchema": {
        "type": "object",
        "additionalProperties": {
          "type": "object",
          "properties": {
            "ok": {
              "type": "number"
            },
            "error": {
              "type": "number"
            },
            "times": {
              "type": "object",
              "properties": {
                "last-hit": {
                  "type": "number"
                },
                "last-error": {
                  "type": "number"
                },
                "last-ok": {
                  "type": "number"
                }
              },
              "required": ["last-hit", "last-error", "last-ok"]
            },
            "visitor": {
              "type": "object",
              "properties": {
                "human": {
                  "type": "number"
                },
                "bot": {
                  "type": "number"
                },
                "unknown": {
                  "type": "number"
                }
              },
              "required": ["human", "bot", "unknown"]
            },
            "group": {
              "type": "object",
              "properties": {
                "1xx": {
                  "type": "number"
                },
                "2xx": {
                  "type": "number"
                },
                "3xx": {
                  "type": "number"
                },
                "4xx": {
                  "type": "number"
                },
                "5xx": {
                  "type": "number"
                }
              },
              "required": ["1xx", "2xx", "3xx", "4xx", "5xx"]
            },
            "status": {
              "type": "object",
              "properties": {
                "304": {
                  "type": "number"
                },
                "307": {
                  "type": "number"
                },
                "404": {
                  "type": "number"
                },
                "405": {
                  "type": "number"
                },
                "500": {
                  "type": "number"
                }
              }
            }
          },
          "required": ["ok", "error", "times", "visitor", "group", "status"]
        }
      },
      "KVResourceMetricsSchema": {
        "type": "object",
        "additionalProperties": {
          "type": "object",
          "properties": {
            "ok": {
              "type": "number"
            },
            "error": {
              "type": "number"
            },
            "times": {
              "type": "object",
              "properties": {
                "last-hit": {
                  "type": "number"
                },
                "last-error": {
                  "type": "number"
                },
                "last-ok": {
                  "type": "number"
                }
              },
              "required": ["last-hit", "last-error", "last-ok"]
            },
            "visitor": {
              "type": "object",
              "properties": {
                "human": {
                  "type": "number"
                },
                "bot": {
                  "type": "number"
                },
                "unknown": {
                  "type": "number"
                }
              },
              "required": ["human", "bot", "unknown"]
            },
            "group": {
              "type": "object",
              "properties": {
                "1xx": {
                  "type": "number"
                },
                "2xx": {
                  "type": "number"
                },
                "3xx": {
                  "type": "number"
                },
                "4xx": {
                  "type": "number"
                },
                "5xx": {
                  "type": "number"
                }
              },
              "required": ["1xx", "2xx", "3xx", "4xx", "5xx"]
            },
            "status": {
              "type": "object",
              "properties": {
                "304": {
                  "type": "number"
                },
                "307": {
                  "type": "number"
                },
                "404": {
                  "type": "number"
                },
                "405": {
                  "type": "number"
                },
                "500": {
                  "type": "number"
                }
              }
            }
          },
          "required": ["ok", "error", "times", "visitor", "group", "status"]
        }
      },
      "KVSampleMetricsSchema": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "number"
          },
          "error": {
            "type": "number"
          },
          "times": {
            "type": "object",
            "properties": {
              "last-hit": {
                "type": "number"
              },
              "last-error": {
                "type": "number"
              },
              "last-ok": {
                "type": "number"
              }
            },
            "required": ["last-hit", "last-error", "last-ok"]
          },
          "visitor": {
            "type": "object",
            "properties": {
              "human": {
                "type": "number"
              },
              "bot": {
                "type": "number"
              },
              "unknown": {
                "type": "number"
              }
            },
            "required": ["human", "bot", "unknown"]
          },
          "group": {
            "type": "object",
            "properties": {
              "1xx": {
                "type": "number"
              },
              "2xx": {
                "type": "number"
              },
              "3xx": {
                "type": "number"
              },
              "4xx": {
                "type": "number"
              },
              "5xx": {
                "type": "number"
              }
            },
            "required": ["1xx", "2xx", "3xx", "4xx", "5xx"]
          },
          "status": {
            "type": "object",
            "properties": {
              "304": {
                "type": "number"
              },
              "307": {
                "type": "number"
              },
              "404": {
                "type": "number"
              },
              "405": {
                "type": "number"
              },
              "500": {
                "type": "number"
              }
            }
          }
        },
        "required": ["ok", "error", "times", "visitor", "group", "status"]
      },
      "KVStatusMetricsSchema": {
        "type": "object",
        "properties": {
          "304": {
            "type": "number"
          },
          "307": {
            "type": "number"
          },
          "404": {
            "type": "number"
          },
          "405": {
            "type": "number"
          },
          "500": {
            "type": "number"
          }
        }
      },
      "KVTimeMetricsSchema": {
        "type": "object",
        "properties": {
          "last-hit": {
            "type": "number"
          },
          "last-error": {
            "type": "number"
          },
          "last-ok": {
            "type": "number"
          }
        },
        "required": ["last-hit", "last-error", "last-ok"]
      },
      "KVVisitorMetricsSchema": {
        "type": "object",
        "properties": {
          "human": {
            "type": "number"
          },
          "bot": {
            "type": "number"
          },
          "unknown": {
            "type": "number"
          }
        },
        "required": ["human", "bot", "unknown"]
      },
      "PingResponseSchema": {
        "type": "object",
        "properties": {
          "cloudflare": {
            "type": "object",
            "properties": {
              "connectingIP": {
                "type": "string"
              },
              "country": {
                "type": "object",
                "properties": {
                  "ip": {
                    "type": "string"
                  },
                  "primary": {
                    "type": "string"
                  }
                },
                "required": ["ip", "primary"]
              },
              "datacentre": {
                "type": "string"
              },
              "ray": {
                "type": "string"
              },
              "request": {
                "type": "object",
                "properties": {
                  "agent": {
                    "type": "string"
                  },
                  "host": {
                    "type": "string"
                  },
                  "method": {
                    "type": "string"
                  },
                  "path": {
                    "type": "string"
                  },
                  "proto": {
                    "type": "object",
                    "properties": {
                      "forward": {
                        "type": "string"
                      },
                      "request": {
                        "type": "string"
                      }
                    },
                    "required": ["forward", "request"]
                  },
                  "version": {
                    "type": "string"
                  }
                },
                "required": ["agent", "host", "method", "path", "proto", "version"]
              }
            },
            "required": ["connectingIP", "country", "datacentre", "ray", "request"]
          },
          "worker": {
            "type": "object",
            "properties": {
              "edge_functions": {
                "type": "boolean"
              },
              "environment": {
                "type": "string"
              },
              "limits": {
                "type": "object",
                "properties": {
                  "cpu_time": {
                    "type": "string"
                  },
                  "memory": {
                    "type": "string"
                  },
                  "request_timeout": {
                    "type": "string"
                  }
                },
                "required": ["cpu_time", "memory", "request_timeout"]
              },
              "preset": {
                "type": "string"
              },
              "runtime": {
                "type": "string"
              },
              "server_side_rendering": {
                "type": "boolean"
              },
              "version": {
                "type": "string"
              }
            },
            "required": [
              "edge_functions",
              "environment",
              "limits",
              "preset",
              "runtime",
              "server_side_rendering",
              "version"
            ]
          }
        },
        "required": ["cloudflare", "worker"]
      },
      "SystemMetricsSchema": {
        "type": "object",
        "properties": {
          "users": {
            "type": "object",
            "properties": {
              "total": {
                "type": "number"
              },
              "active": {
                "type": "number"
              },
              "new_today": {
                "type": "number"
              }
            },
            "required": ["total", "active", "new_today"]
          },
          "posts": {
            "type": "object",
            "properties": {
              "total": {
                "type": "number"
              },
              "published": {
                "type": "number"
              },
              "drafts": {
                "type": "number"
              }
            },
            "required": ["total", "published", "drafts"]
          },
          "system": {
            "type": "object",
            "properties": {
              "runtime": {
                "type": "string"
              },
              "timestamp": {
                "type": "string"
              },
              "cf_ray": {
                "type": "string"
              },
              "cf_datacenter": {
                "type": "string"
              },
              "cf_country": {
                "type": "string"
              }
            },
            "required": ["runtime", "timestamp"]
          },
          "api": {
            "type": "object",
            "properties": {
              "version": {
                "type": "string"
              },
              "endpoints_available": {
                "type": "number"
              }
            },
            "required": ["version", "endpoints_available"]
          }
        },
        "required": ["users", "posts", "system", "api"]
      },
      "TokenMetricsSchema": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [true]
          },
          "data": {
            "type": "object",
            "properties": {
              "total_requests": {
                "type": "number"
              },
              "successful_requests": {
                "type": "number"
              },
              "failed_requests": {
                "type": "number"
              },
              "redirect_clicks": {
                "type": "number"
              },
              "kv_timings_ms": {
                "type": "object",
                "additionalProperties": {
                  "type": "number"
                }
              }
            },
            "required": ["total_requests", "successful_requests", "failed_requests", "redirect_clicks"]
          },
          "timestamp": {
            "type": "string"
          }
        },
        "required": ["success", "data", "timestamp"]
      },
      "TokenUsageSchema": {
        "type": "object",
        "properties": {
          "token_id": {
            "type": "string"
          },
          "usage_count": {
            "type": "number"
          },
          "max_requests": {
            "type": ["number", "null"]
          },
          "created_at": {
            "type": "string"
          },
          "last_used": {
            "type": "string"
          }
        },
        "required": ["token_id", "usage_count", "created_at"]
      },
      "UrlRedirectSchema": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9\\-_]+$"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "clicks": {
            "type": "number",
            "default": 0
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "required": ["slug", "url", "created_at"]
      },
      "UserSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "issuedAt": {
            "type": "string"
          },
          "expiresAt": {
            "type": ["string", "null"]
          },
          "tokenId": {
            "type": "string"
          }
        },
        "required": ["id", "issuedAt", "expiresAt"]
      },
      "WorkerInfoSchema": {
        "type": "object",
        "properties": {
          "runtime": {
            "type": "string"
          },
          "preset": {
            "type": "string"
          },
          "api_available": {
            "type": "boolean"
          },
          "server_side_rendering": {
            "type": "boolean"
          },
          "edge_functions": {
            "type": "boolean"
          },
          "cf_ray": {
            "type": "string"
          },
          "cf_ipcountry": {
            "type": "string"
          },
          "cf_connecting_ip": {
            "type": "string"
          },
          "worker_limits": {
            "type": "object",
            "properties": {
              "cpu_time": {
                "type": "string"
              },
              "memory": {
                "type": "string"
              },
              "request_timeout": {
                "type": "string"
              }
            },
            "required": ["cpu_time", "memory", "request_timeout"]
          }
        },
        "required": [
          "runtime",
          "preset",
          "api_available",
          "server_side_rendering",
          "edge_functions",
          "cf_ray",
          "cf_ipcountry",
          "cf_connecting_ip",
          "worker_limits"
        ]
      }
    },
    "parameters": {}
  },
  "paths": {
    "/api/ping": {
      "get": {
        "tags": ["System"],
        "summary": "Ping endpoint with comprehensive system information",
        "description": "Returns system health, worker info, and Cloudflare metadata (merged from previous health, ping, and worker endpoints)",
        "responses": {
          "200": {
            "description": "System information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cloudflare": {
                      "type": "object",
                      "properties": {
                        "connectingIP": {
                          "type": "string"
                        },
                        "country": {
                          "type": "object",
                          "properties": {
                            "ip": {
                              "type": "string"
                            },
                            "primary": {
                              "type": "string"
                            }
                          },
                          "required": ["ip", "primary"]
                        },
                        "datacentre": {
                          "type": "string"
                        },
                        "ray": {
                          "type": "string"
                        },
                        "request": {
                          "type": "object",
                          "properties": {
                            "agent": {
                              "type": "string"
                            },
                            "host": {
                              "type": "string"
                            },
                            "method": {
                              "type": "string"
                            },
                            "path": {
                              "type": "string"
                            },
                            "proto": {
                              "type": "object",
                              "properties": {
                                "forward": {
                                  "type": "string"
                                },
                                "request": {
                                  "type": "string"
                                }
                              },
                              "required": ["forward", "request"]
                            },
                            "version": {
                              "type": "string"
                            }
                          },
                          "required": ["agent", "host", "method", "path", "proto", "version"]
                        }
                      },
                      "required": ["connectingIP", "country", "datacentre", "ray", "request"]
                    },
                    "worker": {
                      "type": "object",
                      "properties": {
                        "edge_functions": {
                          "type": "boolean"
                        },
                        "environment": {
                          "type": "string"
                        },
                        "limits": {
                          "type": "object",
                          "properties": {
                            "cpu_time": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "string"
                            },
                            "request_timeout": {
                              "type": "string"
                            }
                          },
                          "required": ["cpu_time", "memory", "request_timeout"]
                        },
                        "preset": {
                          "type": "string"
                        },
                        "runtime": {
                          "type": "string"
                        },
                        "server_side_rendering": {
                          "type": "boolean"
                        },
                        "version": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "edge_functions",
                        "environment",
                        "limits",
                        "preset",
                        "runtime",
                        "server_side_rendering",
                        "version"
                      ]
                    }
                  },
                  "required": ["cloudflare", "worker"]
                }
              }
            }
          }
        }
      }
    },
    "/api/ai/alt": {
      "get": {
        "tags": ["AI"],
        "summary": "Generate alt-text from URL",
        "description": "Generates descriptive alt-text for images from URL using AI",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "required": true,
            "description": "Image URL to analyze",
            "schema": {
              "type": "string",
              "format": "uri"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Alt-text generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "alt_text": {
                      "type": "string"
                    },
                    "confidence": {
                      "type": "number"
                    },
                    "processing_time_ms": {
                      "type": "number"
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["success", "alt_text", "timestamp"]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "details": {},
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["success", "error", "timestamp"]
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "details": {},
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["success", "error", "timestamp"]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["AI"],
        "summary": "Generate alt-text from base64 image",
        "description": "Generates descriptive alt-text for base64-encoded images using AI",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "format": "uri",
                    "description": "Image URL to analyze"
                  },
                  "image": {
                    "type": "string",
                    "description": "Base64-encoded image data (without data: prefix)"
                  }
                },
                "oneOf": [
                  {
                    "required": ["url"]
                  },
                  {
                    "required": ["image"]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Alt-text generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "alt_text": {
                      "type": "string"
                    },
                    "confidence": {
                      "type": "number"
                    },
                    "processing_time_ms": {
                      "type": "number"
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["success", "alt_text", "timestamp"]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "details": {},
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["success", "error", "timestamp"]
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "details": {},
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["success", "error", "timestamp"]
                }
              }
            }
          }
        }
      }
    },
    "/api/images/optimise": {
      "post": {
        "tags": ["Images"],
        "summary": "Optimize image",
        "description": "Optimizes images using Cloudflare Images service",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "description": "Base64-encoded image data (without data: prefix)"
                  },
                  "quality": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100,
                    "description": "Image quality (0-100, default: 80)"
                  }
                },
                "required": ["image"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Image optimized successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "originalSizeBytes": {
                          "type": "number"
                        },
                        "optimisedSizeBytes": {
                          "type": "number"
                        },
                        "compressionRatio": {
                          "type": "number"
                        },
                        "format": {
                          "type": "string",
                          "enum": ["webp"]
                        },
                        "hash": {
                          "type": "string"
                        },
                        "quality": {
                          "type": "number"
                        },
                        "preset": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "enum": ["alt"]
                            },
                            "description": {
                              "type": "string"
                            },
                            "maxSizeBytes": {
                              "type": "number"
                            }
                          },
                          "required": ["name", "description", "maxSizeBytes"]
                        },
                        "imageSource": {
                          "type": "string"
                        },
                        "timestamp": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "url",
                        "originalSizeBytes",
                        "optimisedSizeBytes",
                        "compressionRatio",
                        "format",
                        "hash",
                        "imageSource",
                        "timestamp"
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["success", "data", "message", "timestamp"]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "details": {},
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["success", "error", "timestamp"]
                }
              }
            }
          }
        }
      }
    },
    "/api/tokens/{uuid}": {
      "get": {
        "tags": ["Tokens"],
        "summary": "Get token information",
        "description": "Retrieves detailed information about a specific token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "description": "Token UUID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "data": {},
                    "message": {
                      "type": "string"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number"
                        },
                        "page": {
                          "type": "number"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "total_pages": {
                          "type": "number"
                        },
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["success", "timestamp"]
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "details": {},
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["success", "error", "timestamp"]
                }
              }
            }
          },
          "404": {
            "description": "Token not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "details": {},
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["success", "error", "timestamp"]
                }
              }
            }
          }
        }
      }
    },
    "/api/tokens/{uuid}/usage": {
      "get": {
        "tags": ["Tokens"],
        "summary": "Get token usage metrics",
        "description": "Retrieves usage statistics for a specific token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "description": "Token UUID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token usage metrics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "total_requests": {
                          "type": "number"
                        },
                        "successful_requests": {
                          "type": "number"
                        },
                        "failed_requests": {
                          "type": "number"
                        },
                        "redirect_clicks": {
                          "type": "number"
                        },
                        "kv_timings_ms": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "number"
                          }
                        }
                      },
                      "required": ["total_requests", "successful_requests", "failed_requests", "redirect_clicks"]
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["success", "data", "timestamp"]
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "details": {},
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["success", "error", "timestamp"]
                }
              }
            }
          },
          "404": {
            "description": "Token not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "details": {},
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["success", "error", "timestamp"]
                }
              }
            }
          }
        }
      }
    },
    "/api/tokens/{uuid}/revoke": {
      "post": {
        "tags": ["Tokens"],
        "summary": "Revoke or restore token",
        "description": "Revokes or restores access for a specific token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "description": "Token UUID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token revocation status updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "data": {},
                    "message": {
                      "type": "string"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number"
                        },
                        "page": {
                          "type": "number"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "total_pages": {
                          "type": "number"
                        },
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["success", "timestamp"]
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "details": {},
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["success", "error", "timestamp"]
                }
              }
            }
          },
          "404": {
            "description": "Token not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "details": {},
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["success", "error", "timestamp"]
                }
              }
            }
          }
        }
      }
    },
    "/go/{slug}": {
      "get": {
        "tags": ["Redirects"],
        "summary": "URL redirection",
        "description": "Redirects to configured URL and tracks clicks",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "description": "Redirect slug",
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9\\-_]+$"
            }
          }
        ],
        "responses": {
          "307": {
            "description": "Temporary redirect",
            "headers": {
              "Location": {
                "description": "Target URL",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "404": {
            "description": "Slug not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "details": {},
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["success", "error", "timestamp"]
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/{name}": {
      "get": {
        "tags": ["Dashboard"],
        "summary": "Get dashboard data",
        "description": "Retrieves dashboard data for specified source",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Dashboard name (e.g., 'hacker-news')",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [true]
                    },
                    "data": {},
                    "message": {
                      "type": "string"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number"
                        },
                        "page": {
                          "type": "number"
                        },
                        "per_page": {
                          "type": "number"
                        },
                        "total_pages": {
                          "type": "number"
                        },
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["success", "timestamp"]
                }
              }
            }
          },
          "400": {
            "description": "Invalid dashboard name",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [false]
                    },
                    "error": {
                      "type": "string"
                    },
                    "details": {},
                    "meta": {
                      "type": "object",
                      "properties": {
                        "request_id": {
                          "type": "string"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string"
                    }
                  },
                  "required": ["success", "error", "timestamp"]
                }
              }
            }
          }
        }
      }
    },
    "/api/docs": {
      "get": {
        "tags": ["Documentation"],
        "summary": "API documentation",
        "description": "Interactive Swagger UI documentation",
        "responses": {
          "200": {
            "description": "API documentation page",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "webhooks": {}
}
